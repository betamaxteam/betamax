/*
Be sure to have a gradle.properties with the following information

signing.keyId=****
signing.password=****
signing.secretKeyRingFile=****

NOTE: SONATYPE_USERNAME and SONATYPE_PASSWORD must be set in your environment

See http://central.sonatype.org/pages/gradle.html for details
 */

apply plugin: "maven"
apply plugin: "signing"

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava, sourceSets.main.resources
}

task javadocJar(type: Jar) {
    classifier "javadoc"
    from javadoc
}

artifacts {
    archives sourceJar, javadocJar
}

signing {
    required { !version.endsWith("SNAPSHOT") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            if (System.getenv()['SONATYPE_USERNAME'] != null && System.getenv()['SONATYPE_PASSWORD'] != null) {
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: System.getenv()['SONATYPE_USERNAME'], password: System.getenv()['SONATYPE_PASSWORD'])
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: System.getenv()['SONATYPE_USERNAME'], password: System.getenv()['SONATYPE_PASSWORD'])
                }
            } else {
                repository(url: "file://${System.properties['user.home']}/.m2/repository")
            }

            pom.project {
                name 'Betamax'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Betamax is a tool for mocking external HTTP resources such as web services and REST APIs in your tests.'
                url 'http://betamax.software/'

                groupId "software.betamax"

                scm {
                    connection 'scm:git:https://github.com/betamaxteam/betamax.git'
                    developerConnection 'scm:git:https://github.com/betamaxteam/betamax.git'
                    url 'https://github.com/betamaxteam/betamax'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'https://github.com/betamaxteam/betamax/blob/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id "cowboygneox"
                        name "Sean Freitag"
                        roles {
                            role "Developer"
                            role "Lead"
                        }
                    }
                    developer {
                        id "robfletcher"
                        name "Rob Fletcher"
                        url "http://freeside.co/"
                        roles {
                            role "Founder"
                            role "Developer"
                        }
                    }
                }
            }
        }
    }
}

def installer = install.repositories.mavenInstaller
def deployer = uploadArchives.repositories.mavenDeployer

[installer, deployer]*.pom*.whenConfigured { pom ->
    // the order here matters; remove test dependencies and then alter the scopes of obvious libraries
    pom.dependencies = pom.dependencies.findAll { dep -> dep.scope != 'test' }

    // TODO We should figure out why this is necessary
    pom.dependencies.find { dep -> dep.groupId == 'betamax' }?.groupId = 'software.betamax'

    pom.dependencies.find { dep -> dep.groupId == 'junit' && dep.artifactId == 'junit' }?.scope = 'provided'
    pom.dependencies.find { dep -> dep.groupId == 'org.specs2' && dep.artifactId == 'specs2-core_2.11' }?.scope = 'provided'
    pom.dependencies.find { dep -> dep.groupId == 'org.scala-lang' && dep.artifactId == 'scala-library' }?.scope = 'provided'
}
